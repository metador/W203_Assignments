knitr::opts_chunk$set(echo = TRUE)
data = read.delim("./videos.txt",header=TRUE , sep="\t")
summary(data)
model1 = lm(log(views)~rate + log(length) , data = data, na.action = na.omit)
summary(model2)
summary(model1)
model2 = lm(log(views)~rate + length , data = data, na.action = na.omit)
sampler <-function(full_data){
return (sample(full_data,5000))
}
for (i in 1:1000)
s = shapiro.test(sampler(model1$residuals))
hist(s$p.value)
s$p.value
sampler <-function(full_data){
return (sample(full_data,5000))
}
for (i in 1:1000)
s[i]=shapiro.test(sampler(model1$residuals))
hist(s$p.value)
s$p.value
s$p.value
sampler <-function(full_data){
return (sample(full_data,5000))
}
for (i in 1:1000){
s[i]=shapiro.test(sampler(model1$residuals))
}
sampler <-function(full_data){
return (sample(full_data,5000))
}
s=rep(0,1000)
for (i in 1:1000){
s[i]=shapiro.test(sampler(model1$residuals))
}
s
s=rep(0,1000)
s
for (i in 1:1000){
s=shapiro.test(sampler(model1$residuals))
}
s
for (i in 1:1000){
s[i,]=shapiro.test(sampler(model1$residuals))
}
for (i in 1:1000){
s[i]=shapiro.test(sampler(model1$residuals))
}
s
s=rep(shapiro.test(sampler(model1$residuals)),1000)
s
for (i in 1:1000){
s[i]=shapiro.test(sampler(model1$residuals))$p.values
}
s
hist(s$p.value)
sampler <-function(full_data){
return (sample(full_data,5000))
}
s=rep(shapiro.test(sampler(model1$residuals)),1000)
s
i=1
for (i in 1:1000){
s[i]=shapiro.test(sampler(model1$residuals))
}
for (i in 1:1000){
s[i]=shapiro.test(sampler(model1$residuals))$p.value
}
s
s$p.value
s$p.value
s$factors
s$factors()
s$factor()
s.levels
levels(sp)
levels(s)
s=rep(shapiro.test(sampler(model1$residuals)),1000)
levels(s)
factor(s)
factors(s)
s=rep(shapiro.test(sampler(model1$residuals)),1000)
s
s = shapiro.test(sampler(model1$residuals))
s=rep(shapiro.test(sampler(model1$residuals)),1000)
s
s = shapiro.test(sampler(model1$residuals))
s
s=rep(shapiro.test(sampler(model1$residuals))$p.value,1000)
s
for (i in 1:1000){
s[i]=shapiro.test(sampler(model1$residuals))$p.value
}
s
hist(s$p.value)
hist(s)
hist(s,break=50)
hist(s,breaks=50)
mean(s)
for (i in 1:10000){
s[i]=shapiro.test(sampler(model1$residuals))$p.value
}
mean(s)
shapiro.test(sampler(model1$residuals))
mean(s)
bptest(model1)
library(car)
library(lmtest)
install.packages("lmtest")
library(lmtest)
library(sandwich)
library(stargazer)
library(car)
bptest(model1)
load("Wage1.rdata")
model1 = lm(wage ~ educ + exper, data = data)
bptest(model1)
model1 = lm(log(views)~rate + log(length) , data = data, na.action = na.omit)
model1 = lm(log(views)~rate + log(length) , data = youtb_data, na.action = na.omit)
youtb_data = read.delim("./videos.txt",header=TRUE , sep="\t")
summary(youtb_data)
model1 = lm(log(views)~rate + log(length) , data = youtb_data, na.action = na.omit)
model2 = lm(log(views)~rate + length , data = youtb_data, na.action = na.omit)
bptest(model1)
vif(model1)
vcovHC(model1)
plot(model1)
coeftest(model1, vcov = vcovHC)
vcovHC(model1)
vif(model1)
vcovHC(model1)
vif(model1) >4
plot(model1,which = 1)
plot(model1,which = 1)
mean(mode1$residuals)
mean(model1$residuals)
bptest(model1)
?bptest(model1)
par(mfrow=c(2,2))
plot(model1)
bptest(model1)
model1 = lm(log(views)~rate + log(length) , data = youtb_data, na.action = na.omit)
bptest(model1)
plot(model1,which = 3)
plot(model1,which = 3)
plot(lm,which = 2)
plot(model1,which = 2)
hist(model1$residuals,breaks=50)
stargazer(model1, type = "text", report = "vc",
header = FALSE,
title = "Linear Models Predicting College GPA",
keep.stat = c( "rsq", "n","aic"),
omit.table.layout = "n")
stargazer(model1, type = "text", report = "vc",
header = FALSE,
se = se.model1,
title = "Linear Models Predicting College GPA",
keep.stat = c( "rsq", "n","aic"),
omit.table.layout = "n")
(se.model1 = sqrt(diag(vcovHC(model1))))
stargazer(model1, type = "text", report = "vc",
header = FALSE,
se = se.model1,
title = "Linear Models Predicting College GPA",
keep.stat = c( "rsq", "n","aic"),
omit.table.layout = "n")
stargazer(model1, type = "text", report = "vc",
header = FALSE,
se = se.model1,
title = "Linear Models Predicting College GPA",
keep.stat = c( "rsq", "n","aic","se"),
omit.table.layout = "n")
?stargazer(model1, type = "text", report = "vc",
header = FALSE,
se = se.model1,
title = "Linear Models Predicting College GPA",
keep.stat = c( "rsq", "n","aic","se"),
omit.table.layout = "n")
?stargazer(model1, type = "text", report = "vc",
header = FALSE,
se = se.model1,
title = "Linear Models Predicting College GPA",
keep.stat = c( "rsq", "n","aic","ser"),
omit.table.layout = "n")
stargazer(model1, type = "text", report = "vc",
header = FALSE,
se = se.model1,
title = "Linear Models Predicting College GPA",
keep.stat = c( "rsq", "n","aic","ser"),
omit.table.layout = "n")
(se.model1 = sqrt(diag(vcovHC(model1))))
(coeftest(model1, vcov = vcovHC)
(se.model1 = sqrt(diag(vcovHC(model1))))
stargazer(model1, type = "text", report = "vc",
(coeftest(model1, vcov = vcovHC))
(se.model1 = sqrt(diag(vcovHC(model1))))
stargazer(model1, type = "text", report = "vc",
header = TRUE,
se = se.model1,
title = "Linear Models Predicting College GPA",
keep.stat = c( "rsq", "n","aic","ser"),
omit.table.layout = "n")
summary(youtb_data)
model3 = lm(log(views) ~ log(lenght) , data = youtb_data)
model3 = lm(log(views) ~ log(length) , data = youtb_data)
summary(model3)
stargazer(model1, type = "text", report = "vc",
header = TRUE,
se = se.model1,
title = "Linear Models Predicting College GPA",
keep.stat = c( "rsq", "n","aic","ser"),
omit.table.layout = "n")
model3 = lm(log(views) ~ (length) , data = youtb_data)
summary(model3)
log(10)
log(e)
?log
log(exp(10))
log(exp(1))
exp(.46)
log(10)
exp(2.3)
exp(1)
exp(1)*.46
exp(5)
exp(0)
exp(1)
exp(2)
exp(3)
(coeftest(model1, vcov = vcovHC))
exp(1)*.467
sd(youtb_data$views)
sd(youtb_data$views , na.rm = TRUE)
plot((youtb_data$views))
plot(sort(youtb_data$views) )
sd(youtb_data$views[youtb_data$views <6500,] , na.rm = TRUE)
sd(youtb_data$views[youtb_data$views <6500] , na.rm = TRUE)
(coeftest(model1, vcov = vcovHC))
log(100)
exp(4.6)
hist(log(youtb_data$views),breaks=50)
hist(log(youtb_data$length),breaks=50)
hist(youtb_data$rate)
## Let us test it using the Shapiro-Wilk
sampler <-function(full_youtb_data){
return (sample(full_youtb_data,5000))
}
s=rep(shapiro.test(sampler(model1$residuals))$p.value,1000)
i=1
for (i in 1:10000){
s[i]=shapiro.test(sampler(model1$residuals))$p.value
}
mean(s)
## Let us test it using the Shapiro-Wilk
sampler <-function(full_youtb_data){
return (sample(full_youtb_data,5000))
}
s=rep(shapiro.test(sampler(model1$residuals))$p.value,1000)
i=1
for (i in 1:1000){
s[i]=shapiro.test(sampler(model1$residuals))$p.value
}
mean(s)
hist(youtb_data$views)
par(mfrow=c(2,2))
plot(model1)
(coeftest(model1, vcov = vcovHC))
(se.model1 = sqrt(diag(vcovHC(model1))))
stargazer(model1, type = "text", report = "vc",
header = TRUE,
se = se.model1,
title = "Linear Models Predicting Youtube views",
keep.stat = c( "rsq", "n","aic","ser"),
omit.table.layout = "n")
race = c(rep("white",3),rep("black",3),rep("other",3))
race = factor(race)
race = sample(race,15,replace=T)
race
wage = rnorm(15)
wage
data=data.frame(list(race=race,wage=wage))
data
model = lm(wage~race, data=data)
summary(model)
load("C:/Users/Melwin/AppData/Local/Temp/Rar$DIa0.844/engin.RData")
load("bwght_w203.RData")
desc
cor(data$bwgth,data)
head(data)
cor(data$bwght,data)
cor(data$bwght,data, use = "complete.obs")
scatterplot.matrix(data$bwght,data)
scatterplot(data$bwght,data)
scatterplot.matrix([data$bwght,data])
?scatterplot.matrix(data$bwght,data)
library(car)
?scatterplot.matrix(data$bwght,data)
?scatterplotMatrix(data$bwght,data)
scatterplotMatrix(data)
